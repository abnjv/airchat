const express = require('express');
const http = require('http');
const { Server } = require('socket.io');
const path = require('path');
const chalk = require('chalk'); // ุฃููุงู ูููุญุฉ ุงูุทุฑููุฉ

const app = express();
const server = http.createServer(app);
const io = new Server(server);

const users = new Map(); // ุชุฎุฒูู ุงููุณุชุฎุฏููู socket.id => username

// ุชูุฏูู ูููุงุช HTML ูู ูุฌูุฏ public
app.use(express.static(path.join(__dirname, 'public')));

// ุนูุฏ ุงุชุตุงู ูุณุชุฎุฏู ุฌุฏูุฏ
io.on('connection', (socket) => {
  console.log(chalk.blue('๐ถ ูุณุชุฎุฏู ูุชุตู: ' + socket.id));

  // ุนูุฏ ุฏุฎูู ุงูุบุฑูุฉ
  socket.on('join', (username) => {
    users.set(socket.id, username);
    console.log(chalk.yellow(`โ ุฏุฎู ุงูุบุฑูุฉ: ${username}`));
    sendUserList(); // ุชุญุฏูุซ ุงููุงุฆูุฉ ููุฌููุน
  });

  // ุนูุฏ ุงูุฎุฑูุฌ ูู ุงูุบุฑูุฉ ุจุฒุฑ ุงูุฎุฑูุฌ
  socket.on('leave', (username) => {
    users.delete(socket.id);
    console.log(chalk.red(`โ ุฎุฑุฌ ูู ุงูุบุฑูุฉ: ${username}`));
    sendUserList();
  });

  // ุนูุฏ ุงููุทุงุน ุงูุงุชุตุงู
  socket.on('disconnect', () => {
    const username = users.get(socket.id);
    if (username) {
      users.delete(socket.id);
      console.log(chalk.red(`โ ุฎุฑุฌ ุจุณุจุจ ุงููุทุงุน ุงูุงุชุตุงู: ${username}`));
      sendUserList();
    }
  });

  // ุฏุงูุฉ ุฅุฑุณุงู ูุงุฆูุฉ ุงููุณุชุฎุฏููู
  function sendUserList() {
    const userList = Array.from(users.values());
    io.emit('user-list', userList); // ุฅุฑุณุงู ููุฌููุน
  }
});

const PORT = process.env.PORT || 5000;
server.listen(PORT, () => {
  console.log(chalk.green(`โ ุงูุณูุฑูุฑ ุดุบุงู ุนูู http://localhost:${PORT}`));
});
